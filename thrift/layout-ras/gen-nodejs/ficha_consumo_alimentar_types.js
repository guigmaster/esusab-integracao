//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var common_ttypes = require('./common_types')


var ttypes = module.exports = {};
ttypes.PerguntaCriancasMenoresSeisMesesEnumThrift = {
'A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO' : 1,
'MINGAU' : 3,
'AGUA_CHA' : 4,
'LEITE_VACA' : 5,
'FORMULA_INFANTIL' : 6,
'SUCO_FRUTA' : 7,
'FRUTA' : 8,
'COMIDA_DE_SAL' : 9,
'OUTROS_ALIMENTOS_BEBIDAS' : 10
};
ttypes.PerguntaCriancasDeSeisVinteTresMesesEnumThrift = {
'A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO' : 21,
'ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO' : 22,
'SE_SIM_QUANTAS_VEZES' : 23,
'ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL' : 24,
'SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES' : 25,
'SE_SIM_ESSA_COMIDA_FOI_OFERECIDA' : 26,
'OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO' : 28,
'MINGAU_COM_LEITE' : 29,
'IOGURTE' : 30,
'LEGUMES' : 31,
'VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS' : 32,
'VERDURA_DE_FOLHA' : 33,
'CARNE' : 34,
'FIGADO' : 35,
'FEIJAO' : 36,
'ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO' : 37,
'HAMBURGUER_E_OU_EMBUTIDOS' : 38,
'BEBIDAS_ADOCADAS' : 39,
'MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS' : 40,
'BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS' : 41
};
ttypes.PerguntaCriancasComMaisDoisAnosEnumThrift = {
'VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR' : 11,
'QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA' : 12,
'FEIJAO' : 14,
'FRUTAS_FRESCAS' : 15,
'VERDURAS_E_OU_LEGUMES' : 16,
'HAMBURGUER_E_OU_EMBUTIDOS' : 17,
'BEBIDAS_ADOCADAS' : 18,
'MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS' : 19,
'BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS' : 20
};
ttypes.RespostaUnicaEscolhaEnumThrift = {
'SIM' : 1,
'NAO' : 2,
'NAO_SABE' : 3,
'UMA_VEZ' : 4,
'DUAS_VEZES' : 5,
'TRES_VEZES_OU_MAIS' : 6,
'EM_PEDACOS' : 7,
'AMASSADA' : 8,
'PASSADA_NA_PENEIRA' : 9,
'LIQUIDIFICADA' : 10,
'SO_O_CALDO' : 11
};
ttypes.RespostaMultiplaEscolhaEnumThrift = {
'CAFE_DA_MANHA' : 12,
'LANCHE_DA_MANHA' : 13,
'ALMOCO' : 14,
'LANCHE_DA_TARDE' : 15,
'JANTAR' : 16,
'CEIA' : 17
};
PerguntaQuestionarioCriancasMenoresSeisMesesThrift = module.exports.PerguntaQuestionarioCriancasMenoresSeisMesesThrift = function(args) {
  this.pergunta = null;
  this.respostaUnicaEscolha = null;
  if (args) {
    if (args.pergunta !== undefined) {
      this.pergunta = args.pergunta;
    }
    if (args.respostaUnicaEscolha !== undefined) {
      this.respostaUnicaEscolha = args.respostaUnicaEscolha;
    }
  }
};
PerguntaQuestionarioCriancasMenoresSeisMesesThrift.prototype = {};
PerguntaQuestionarioCriancasMenoresSeisMesesThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.pergunta = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.respostaUnicaEscolha = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PerguntaQuestionarioCriancasMenoresSeisMesesThrift.prototype.write = function(output) {
  output.writeStructBegin('PerguntaQuestionarioCriancasMenoresSeisMesesThrift');
  if (this.pergunta !== null && this.pergunta !== undefined) {
    output.writeFieldBegin('pergunta', Thrift.Type.I32, 1);
    output.writeI32(this.pergunta);
    output.writeFieldEnd();
  }
  if (this.respostaUnicaEscolha !== null && this.respostaUnicaEscolha !== undefined) {
    output.writeFieldBegin('respostaUnicaEscolha', Thrift.Type.I32, 2);
    output.writeI32(this.respostaUnicaEscolha);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift = module.exports.PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift = function(args) {
  this.pergunta = null;
  this.respostaUnicaEscolha = null;
  if (args) {
    if (args.pergunta !== undefined) {
      this.pergunta = args.pergunta;
    }
    if (args.respostaUnicaEscolha !== undefined) {
      this.respostaUnicaEscolha = args.respostaUnicaEscolha;
    }
  }
};
PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift.prototype = {};
PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.pergunta = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.respostaUnicaEscolha = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift.prototype.write = function(output) {
  output.writeStructBegin('PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift');
  if (this.pergunta !== null && this.pergunta !== undefined) {
    output.writeFieldBegin('pergunta', Thrift.Type.I32, 1);
    output.writeI32(this.pergunta);
    output.writeFieldEnd();
  }
  if (this.respostaUnicaEscolha !== null && this.respostaUnicaEscolha !== undefined) {
    output.writeFieldBegin('respostaUnicaEscolha', Thrift.Type.I32, 2);
    output.writeI32(this.respostaUnicaEscolha);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

PerguntaQuestionarioCriancasComMaisDoisAnosThrift = module.exports.PerguntaQuestionarioCriancasComMaisDoisAnosThrift = function(args) {
  this.pergunta = null;
  this.respostaUnicaEscolha = null;
  this.respostaMultiplaEscolha = null;
  if (args) {
    if (args.pergunta !== undefined) {
      this.pergunta = args.pergunta;
    }
    if (args.respostaUnicaEscolha !== undefined) {
      this.respostaUnicaEscolha = args.respostaUnicaEscolha;
    }
    if (args.respostaMultiplaEscolha !== undefined) {
      this.respostaMultiplaEscolha = args.respostaMultiplaEscolha;
    }
  }
};
PerguntaQuestionarioCriancasComMaisDoisAnosThrift.prototype = {};
PerguntaQuestionarioCriancasComMaisDoisAnosThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.pergunta = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.respostaUnicaEscolha = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.respostaMultiplaEscolha = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI32();
          this.respostaMultiplaEscolha.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PerguntaQuestionarioCriancasComMaisDoisAnosThrift.prototype.write = function(output) {
  output.writeStructBegin('PerguntaQuestionarioCriancasComMaisDoisAnosThrift');
  if (this.pergunta !== null && this.pergunta !== undefined) {
    output.writeFieldBegin('pergunta', Thrift.Type.I32, 1);
    output.writeI32(this.pergunta);
    output.writeFieldEnd();
  }
  if (this.respostaUnicaEscolha !== null && this.respostaUnicaEscolha !== undefined) {
    output.writeFieldBegin('respostaUnicaEscolha', Thrift.Type.I32, 2);
    output.writeI32(this.respostaUnicaEscolha);
    output.writeFieldEnd();
  }
  if (this.respostaMultiplaEscolha !== null && this.respostaMultiplaEscolha !== undefined) {
    output.writeFieldBegin('respostaMultiplaEscolha', Thrift.Type.LIST, 3);
    output.writeListBegin(Thrift.Type.I32, this.respostaMultiplaEscolha.length);
    for (var iter7 in this.respostaMultiplaEscolha)
    {
      if (this.respostaMultiplaEscolha.hasOwnProperty(iter7))
      {
        iter7 = this.respostaMultiplaEscolha[iter7];
        output.writeI32(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

FichaConsumoAlimentarThrift = module.exports.FichaConsumoAlimentarThrift = function(args) {
  this.headerTransport = null;
  this.cnsCidadao = null;
  this.identificacaoUsuario = null;
  this.dataNascimento = null;
  this.sexo = null;
  this.localAtendimento = null;
  this.perguntasQuestionarioCriancasMenoresSeisMeses = null;
  this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = null;
  this.perguntasQuestionarioCriancasComMaisDoisAnos = null;
  this.uuidFicha = null;
  this.tpCdsOrigem = null;
  this.cpfCidadao = null;
  if (args) {
    if (args.headerTransport !== undefined) {
      this.headerTransport = args.headerTransport;
    }
    if (args.cnsCidadao !== undefined) {
      this.cnsCidadao = args.cnsCidadao;
    }
    if (args.identificacaoUsuario !== undefined) {
      this.identificacaoUsuario = args.identificacaoUsuario;
    }
    if (args.dataNascimento !== undefined) {
      this.dataNascimento = args.dataNascimento;
    }
    if (args.sexo !== undefined) {
      this.sexo = args.sexo;
    }
    if (args.localAtendimento !== undefined) {
      this.localAtendimento = args.localAtendimento;
    }
    if (args.perguntasQuestionarioCriancasMenoresSeisMeses !== undefined) {
      this.perguntasQuestionarioCriancasMenoresSeisMeses = args.perguntasQuestionarioCriancasMenoresSeisMeses;
    }
    if (args.perguntasQuestionarioCriancasDeSeisVinteTresMeses !== undefined) {
      this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = args.perguntasQuestionarioCriancasDeSeisVinteTresMeses;
    }
    if (args.perguntasQuestionarioCriancasComMaisDoisAnos !== undefined) {
      this.perguntasQuestionarioCriancasComMaisDoisAnos = args.perguntasQuestionarioCriancasComMaisDoisAnos;
    }
    if (args.uuidFicha !== undefined) {
      this.uuidFicha = args.uuidFicha;
    }
    if (args.tpCdsOrigem !== undefined) {
      this.tpCdsOrigem = args.tpCdsOrigem;
    }
    if (args.cpfCidadao !== undefined) {
      this.cpfCidadao = args.cpfCidadao;
    }
  }
};
FichaConsumoAlimentarThrift.prototype = {};
FichaConsumoAlimentarThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.headerTransport = new common_ttypes.UnicaLotacaoHeaderThrift();
        this.headerTransport.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.cnsCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.identificacaoUsuario = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I64) {
        this.dataNascimento = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I64) {
        this.sexo = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I64) {
        this.localAtendimento = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.perguntasQuestionarioCriancasMenoresSeisMeses = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new ttypes.PerguntaQuestionarioCriancasMenoresSeisMesesThrift();
          elem14.read(input);
          this.perguntasQuestionarioCriancasMenoresSeisMeses.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.LIST) {
        var _size15 = 0;
        var _rtmp319;
        this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = [];
        var _etype18 = 0;
        _rtmp319 = input.readListBegin();
        _etype18 = _rtmp319.etype;
        _size15 = _rtmp319.size;
        for (var _i20 = 0; _i20 < _size15; ++_i20)
        {
          var elem21 = null;
          elem21 = new ttypes.PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift();
          elem21.read(input);
          this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.push(elem21);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.LIST) {
        var _size22 = 0;
        var _rtmp326;
        this.perguntasQuestionarioCriancasComMaisDoisAnos = [];
        var _etype25 = 0;
        _rtmp326 = input.readListBegin();
        _etype25 = _rtmp326.etype;
        _size22 = _rtmp326.size;
        for (var _i27 = 0; _i27 < _size22; ++_i27)
        {
          var elem28 = null;
          elem28 = new ttypes.PerguntaQuestionarioCriancasComMaisDoisAnosThrift();
          elem28.read(input);
          this.perguntasQuestionarioCriancasComMaisDoisAnos.push(elem28);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.STRING) {
        this.uuidFicha = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.I32) {
        this.tpCdsOrigem = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.STRING) {
        this.cpfCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FichaConsumoAlimentarThrift.prototype.write = function(output) {
  output.writeStructBegin('FichaConsumoAlimentarThrift');
  if (this.headerTransport !== null && this.headerTransport !== undefined) {
    output.writeFieldBegin('headerTransport', Thrift.Type.STRUCT, 1);
    this.headerTransport.write(output);
    output.writeFieldEnd();
  }
  if (this.cnsCidadao !== null && this.cnsCidadao !== undefined) {
    output.writeFieldBegin('cnsCidadao', Thrift.Type.STRING, 2);
    output.writeString(this.cnsCidadao);
    output.writeFieldEnd();
  }
  if (this.identificacaoUsuario !== null && this.identificacaoUsuario !== undefined) {
    output.writeFieldBegin('identificacaoUsuario', Thrift.Type.STRING, 3);
    output.writeString(this.identificacaoUsuario);
    output.writeFieldEnd();
  }
  if (this.dataNascimento !== null && this.dataNascimento !== undefined) {
    output.writeFieldBegin('dataNascimento', Thrift.Type.I64, 4);
    output.writeI64(this.dataNascimento);
    output.writeFieldEnd();
  }
  if (this.sexo !== null && this.sexo !== undefined) {
    output.writeFieldBegin('sexo', Thrift.Type.I64, 5);
    output.writeI64(this.sexo);
    output.writeFieldEnd();
  }
  if (this.localAtendimento !== null && this.localAtendimento !== undefined) {
    output.writeFieldBegin('localAtendimento', Thrift.Type.I64, 6);
    output.writeI64(this.localAtendimento);
    output.writeFieldEnd();
  }
  if (this.perguntasQuestionarioCriancasMenoresSeisMeses !== null && this.perguntasQuestionarioCriancasMenoresSeisMeses !== undefined) {
    output.writeFieldBegin('perguntasQuestionarioCriancasMenoresSeisMeses', Thrift.Type.LIST, 7);
    output.writeListBegin(Thrift.Type.STRUCT, this.perguntasQuestionarioCriancasMenoresSeisMeses.length);
    for (var iter29 in this.perguntasQuestionarioCriancasMenoresSeisMeses)
    {
      if (this.perguntasQuestionarioCriancasMenoresSeisMeses.hasOwnProperty(iter29))
      {
        iter29 = this.perguntasQuestionarioCriancasMenoresSeisMeses[iter29];
        iter29.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses !== null && this.perguntasQuestionarioCriancasDeSeisVinteTresMeses !== undefined) {
    output.writeFieldBegin('perguntasQuestionarioCriancasDeSeisVinteTresMeses', Thrift.Type.LIST, 8);
    output.writeListBegin(Thrift.Type.STRUCT, this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.length);
    for (var iter30 in this.perguntasQuestionarioCriancasDeSeisVinteTresMeses)
    {
      if (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.hasOwnProperty(iter30))
      {
        iter30 = this.perguntasQuestionarioCriancasDeSeisVinteTresMeses[iter30];
        iter30.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.perguntasQuestionarioCriancasComMaisDoisAnos !== null && this.perguntasQuestionarioCriancasComMaisDoisAnos !== undefined) {
    output.writeFieldBegin('perguntasQuestionarioCriancasComMaisDoisAnos', Thrift.Type.LIST, 9);
    output.writeListBegin(Thrift.Type.STRUCT, this.perguntasQuestionarioCriancasComMaisDoisAnos.length);
    for (var iter31 in this.perguntasQuestionarioCriancasComMaisDoisAnos)
    {
      if (this.perguntasQuestionarioCriancasComMaisDoisAnos.hasOwnProperty(iter31))
      {
        iter31 = this.perguntasQuestionarioCriancasComMaisDoisAnos[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.uuidFicha !== null && this.uuidFicha !== undefined) {
    output.writeFieldBegin('uuidFicha', Thrift.Type.STRING, 10);
    output.writeString(this.uuidFicha);
    output.writeFieldEnd();
  }
  if (this.tpCdsOrigem !== null && this.tpCdsOrigem !== undefined) {
    output.writeFieldBegin('tpCdsOrigem', Thrift.Type.I32, 11);
    output.writeI32(this.tpCdsOrigem);
    output.writeFieldEnd();
  }
  if (this.cpfCidadao !== null && this.cpfCidadao !== undefined) {
    output.writeFieldBegin('cpfCidadao', Thrift.Type.STRING, 12);
    output.writeString(this.cpfCidadao);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

