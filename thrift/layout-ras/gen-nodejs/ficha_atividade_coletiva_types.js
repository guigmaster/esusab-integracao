//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var common_ttypes = require('./common_types')


var ttypes = module.exports = {};
ParticipanteRowItemThrift = module.exports.ParticipanteRowItemThrift = function(args) {
  this.cnsParticipante = null;
  this.dataNascimento = null;
  this.avaliacaoAlterada = null;
  this.peso = null;
  this.altura = null;
  this.cessouHabitoFumar = null;
  this.abandonouGrupo = null;
  this.sexo = null;
  this.cpfParticipante = null;
  if (args) {
    if (args.cnsParticipante !== undefined) {
      this.cnsParticipante = args.cnsParticipante;
    }
    if (args.dataNascimento !== undefined) {
      this.dataNascimento = args.dataNascimento;
    }
    if (args.avaliacaoAlterada !== undefined) {
      this.avaliacaoAlterada = args.avaliacaoAlterada;
    }
    if (args.peso !== undefined) {
      this.peso = args.peso;
    }
    if (args.altura !== undefined) {
      this.altura = args.altura;
    }
    if (args.cessouHabitoFumar !== undefined) {
      this.cessouHabitoFumar = args.cessouHabitoFumar;
    }
    if (args.abandonouGrupo !== undefined) {
      this.abandonouGrupo = args.abandonouGrupo;
    }
    if (args.sexo !== undefined) {
      this.sexo = args.sexo;
    }
    if (args.cpfParticipante !== undefined) {
      this.cpfParticipante = args.cpfParticipante;
    }
  }
};
ParticipanteRowItemThrift.prototype = {};
ParticipanteRowItemThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.cnsParticipante = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.dataNascimento = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.BOOL) {
        this.avaliacaoAlterada = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.DOUBLE) {
        this.peso = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.DOUBLE) {
        this.altura = input.readDouble();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.BOOL) {
        this.cessouHabitoFumar = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.BOOL) {
        this.abandonouGrupo = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I64) {
        this.sexo = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.cpfParticipante = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ParticipanteRowItemThrift.prototype.write = function(output) {
  output.writeStructBegin('ParticipanteRowItemThrift');
  if (this.cnsParticipante !== null && this.cnsParticipante !== undefined) {
    output.writeFieldBegin('cnsParticipante', Thrift.Type.STRING, 1);
    output.writeString(this.cnsParticipante);
    output.writeFieldEnd();
  }
  if (this.dataNascimento !== null && this.dataNascimento !== undefined) {
    output.writeFieldBegin('dataNascimento', Thrift.Type.I64, 2);
    output.writeI64(this.dataNascimento);
    output.writeFieldEnd();
  }
  if (this.avaliacaoAlterada !== null && this.avaliacaoAlterada !== undefined) {
    output.writeFieldBegin('avaliacaoAlterada', Thrift.Type.BOOL, 3);
    output.writeBool(this.avaliacaoAlterada);
    output.writeFieldEnd();
  }
  if (this.peso !== null && this.peso !== undefined) {
    output.writeFieldBegin('peso', Thrift.Type.DOUBLE, 4);
    output.writeDouble(this.peso);
    output.writeFieldEnd();
  }
  if (this.altura !== null && this.altura !== undefined) {
    output.writeFieldBegin('altura', Thrift.Type.DOUBLE, 5);
    output.writeDouble(this.altura);
    output.writeFieldEnd();
  }
  if (this.cessouHabitoFumar !== null && this.cessouHabitoFumar !== undefined) {
    output.writeFieldBegin('cessouHabitoFumar', Thrift.Type.BOOL, 6);
    output.writeBool(this.cessouHabitoFumar);
    output.writeFieldEnd();
  }
  if (this.abandonouGrupo !== null && this.abandonouGrupo !== undefined) {
    output.writeFieldBegin('abandonouGrupo', Thrift.Type.BOOL, 7);
    output.writeBool(this.abandonouGrupo);
    output.writeFieldEnd();
  }
  if (this.sexo !== null && this.sexo !== undefined) {
    output.writeFieldBegin('sexo', Thrift.Type.I64, 8);
    output.writeI64(this.sexo);
    output.writeFieldEnd();
  }
  if (this.cpfParticipante !== null && this.cpfParticipante !== undefined) {
    output.writeFieldBegin('cpfParticipante', Thrift.Type.STRING, 9);
    output.writeString(this.cpfParticipante);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

ProfissionalCboRowItemThrift = module.exports.ProfissionalCboRowItemThrift = function(args) {
  this.cnsProfissional = null;
  this.codigoCbo2002 = null;
  if (args) {
    if (args.cnsProfissional !== undefined) {
      this.cnsProfissional = args.cnsProfissional;
    }
    if (args.codigoCbo2002 !== undefined) {
      this.codigoCbo2002 = args.codigoCbo2002;
    }
  }
};
ProfissionalCboRowItemThrift.prototype = {};
ProfissionalCboRowItemThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.cnsProfissional = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.codigoCbo2002 = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ProfissionalCboRowItemThrift.prototype.write = function(output) {
  output.writeStructBegin('ProfissionalCboRowItemThrift');
  if (this.cnsProfissional !== null && this.cnsProfissional !== undefined) {
    output.writeFieldBegin('cnsProfissional', Thrift.Type.STRING, 1);
    output.writeString(this.cnsProfissional);
    output.writeFieldEnd();
  }
  if (this.codigoCbo2002 !== null && this.codigoCbo2002 !== undefined) {
    output.writeFieldBegin('codigoCbo2002', Thrift.Type.STRING, 2);
    output.writeString(this.codigoCbo2002);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

FichaAtividadeColetivaThrift = module.exports.FichaAtividadeColetivaThrift = function(args) {
  this.uuidFicha = null;
  this.outraLocalidade = null;
  this.inep = null;
  this.numParticipantes = null;
  this.numAvaliacoesAlteradas = null;
  this.profissionais = null;
  this.atividadeTipo = null;
  this.temasParaReuniao = null;
  this.publicoAlvo = null;
  this.participantes = null;
  this.tbCdsOrigem = null;
  this.cnesLocalAtividade = null;
  this.procedimento = null;
  this.turno = null;
  this.headerTransport = null;
  this.temasParaSaude = null;
  this.praticasEmSaude = null;
  this.pseEducacao = null;
  this.pseSaude = null;
  if (args) {
    if (args.uuidFicha !== undefined) {
      this.uuidFicha = args.uuidFicha;
    }
    if (args.outraLocalidade !== undefined) {
      this.outraLocalidade = args.outraLocalidade;
    }
    if (args.inep !== undefined) {
      this.inep = args.inep;
    }
    if (args.numParticipantes !== undefined) {
      this.numParticipantes = args.numParticipantes;
    }
    if (args.numAvaliacoesAlteradas !== undefined) {
      this.numAvaliacoesAlteradas = args.numAvaliacoesAlteradas;
    }
    if (args.profissionais !== undefined) {
      this.profissionais = args.profissionais;
    }
    if (args.atividadeTipo !== undefined) {
      this.atividadeTipo = args.atividadeTipo;
    }
    if (args.temasParaReuniao !== undefined) {
      this.temasParaReuniao = args.temasParaReuniao;
    }
    if (args.publicoAlvo !== undefined) {
      this.publicoAlvo = args.publicoAlvo;
    }
    if (args.participantes !== undefined) {
      this.participantes = args.participantes;
    }
    if (args.tbCdsOrigem !== undefined) {
      this.tbCdsOrigem = args.tbCdsOrigem;
    }
    if (args.cnesLocalAtividade !== undefined) {
      this.cnesLocalAtividade = args.cnesLocalAtividade;
    }
    if (args.procedimento !== undefined) {
      this.procedimento = args.procedimento;
    }
    if (args.turno !== undefined) {
      this.turno = args.turno;
    }
    if (args.headerTransport !== undefined) {
      this.headerTransport = args.headerTransport;
    }
    if (args.temasParaSaude !== undefined) {
      this.temasParaSaude = args.temasParaSaude;
    }
    if (args.praticasEmSaude !== undefined) {
      this.praticasEmSaude = args.praticasEmSaude;
    }
    if (args.pseEducacao !== undefined) {
      this.pseEducacao = args.pseEducacao;
    }
    if (args.pseSaude !== undefined) {
      this.pseSaude = args.pseSaude;
    }
  }
};
FichaAtividadeColetivaThrift.prototype = {};
FichaAtividadeColetivaThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uuidFicha = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.outraLocalidade = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I64) {
        this.inep = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.I32) {
        this.numParticipantes = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.I32) {
        this.numAvaliacoesAlteradas = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 13:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.profissionais = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.ProfissionalCboRowItemThrift();
          elem6.read(input);
          this.profissionais.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 14:
      if (ftype == Thrift.Type.I64) {
        this.atividadeTipo = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 15:
      if (ftype == Thrift.Type.LIST) {
        var _size7 = 0;
        var _rtmp311;
        this.temasParaReuniao = [];
        var _etype10 = 0;
        _rtmp311 = input.readListBegin();
        _etype10 = _rtmp311.etype;
        _size7 = _rtmp311.size;
        for (var _i12 = 0; _i12 < _size7; ++_i12)
        {
          var elem13 = null;
          elem13 = input.readI64();
          this.temasParaReuniao.push(elem13);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 16:
      if (ftype == Thrift.Type.LIST) {
        var _size14 = 0;
        var _rtmp318;
        this.publicoAlvo = [];
        var _etype17 = 0;
        _rtmp318 = input.readListBegin();
        _etype17 = _rtmp318.etype;
        _size14 = _rtmp318.size;
        for (var _i19 = 0; _i19 < _size14; ++_i19)
        {
          var elem20 = null;
          elem20 = input.readI64();
          this.publicoAlvo.push(elem20);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 18:
      if (ftype == Thrift.Type.LIST) {
        var _size21 = 0;
        var _rtmp325;
        this.participantes = [];
        var _etype24 = 0;
        _rtmp325 = input.readListBegin();
        _etype24 = _rtmp325.etype;
        _size21 = _rtmp325.size;
        for (var _i26 = 0; _i26 < _size21; ++_i26)
        {
          var elem27 = null;
          elem27 = new ttypes.ParticipanteRowItemThrift();
          elem27.read(input);
          this.participantes.push(elem27);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 19:
      if (ftype == Thrift.Type.I32) {
        this.tbCdsOrigem = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 21:
      if (ftype == Thrift.Type.STRING) {
        this.cnesLocalAtividade = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 22:
      if (ftype == Thrift.Type.STRING) {
        this.procedimento = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 23:
      if (ftype == Thrift.Type.I64) {
        this.turno = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 24:
      if (ftype == Thrift.Type.STRUCT) {
        this.headerTransport = new common_ttypes.UnicaLotacaoHeaderThrift();
        this.headerTransport.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 25:
      if (ftype == Thrift.Type.LIST) {
        var _size28 = 0;
        var _rtmp332;
        this.temasParaSaude = [];
        var _etype31 = 0;
        _rtmp332 = input.readListBegin();
        _etype31 = _rtmp332.etype;
        _size28 = _rtmp332.size;
        for (var _i33 = 0; _i33 < _size28; ++_i33)
        {
          var elem34 = null;
          elem34 = input.readI64();
          this.temasParaSaude.push(elem34);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 26:
      if (ftype == Thrift.Type.LIST) {
        var _size35 = 0;
        var _rtmp339;
        this.praticasEmSaude = [];
        var _etype38 = 0;
        _rtmp339 = input.readListBegin();
        _etype38 = _rtmp339.etype;
        _size35 = _rtmp339.size;
        for (var _i40 = 0; _i40 < _size35; ++_i40)
        {
          var elem41 = null;
          elem41 = input.readI64();
          this.praticasEmSaude.push(elem41);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 27:
      if (ftype == Thrift.Type.BOOL) {
        this.pseEducacao = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 28:
      if (ftype == Thrift.Type.BOOL) {
        this.pseSaude = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FichaAtividadeColetivaThrift.prototype.write = function(output) {
  output.writeStructBegin('FichaAtividadeColetivaThrift');
  if (this.uuidFicha !== null && this.uuidFicha !== undefined) {
    output.writeFieldBegin('uuidFicha', Thrift.Type.STRING, 1);
    output.writeString(this.uuidFicha);
    output.writeFieldEnd();
  }
  if (this.outraLocalidade !== null && this.outraLocalidade !== undefined) {
    output.writeFieldBegin('outraLocalidade', Thrift.Type.STRING, 4);
    output.writeString(this.outraLocalidade);
    output.writeFieldEnd();
  }
  if (this.inep !== null && this.inep !== undefined) {
    output.writeFieldBegin('inep', Thrift.Type.I64, 7);
    output.writeI64(this.inep);
    output.writeFieldEnd();
  }
  if (this.numParticipantes !== null && this.numParticipantes !== undefined) {
    output.writeFieldBegin('numParticipantes', Thrift.Type.I32, 11);
    output.writeI32(this.numParticipantes);
    output.writeFieldEnd();
  }
  if (this.numAvaliacoesAlteradas !== null && this.numAvaliacoesAlteradas !== undefined) {
    output.writeFieldBegin('numAvaliacoesAlteradas', Thrift.Type.I32, 12);
    output.writeI32(this.numAvaliacoesAlteradas);
    output.writeFieldEnd();
  }
  if (this.profissionais !== null && this.profissionais !== undefined) {
    output.writeFieldBegin('profissionais', Thrift.Type.LIST, 13);
    output.writeListBegin(Thrift.Type.STRUCT, this.profissionais.length);
    for (var iter42 in this.profissionais)
    {
      if (this.profissionais.hasOwnProperty(iter42))
      {
        iter42 = this.profissionais[iter42];
        iter42.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.atividadeTipo !== null && this.atividadeTipo !== undefined) {
    output.writeFieldBegin('atividadeTipo', Thrift.Type.I64, 14);
    output.writeI64(this.atividadeTipo);
    output.writeFieldEnd();
  }
  if (this.temasParaReuniao !== null && this.temasParaReuniao !== undefined) {
    output.writeFieldBegin('temasParaReuniao', Thrift.Type.LIST, 15);
    output.writeListBegin(Thrift.Type.I64, this.temasParaReuniao.length);
    for (var iter43 in this.temasParaReuniao)
    {
      if (this.temasParaReuniao.hasOwnProperty(iter43))
      {
        iter43 = this.temasParaReuniao[iter43];
        output.writeI64(iter43);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.publicoAlvo !== null && this.publicoAlvo !== undefined) {
    output.writeFieldBegin('publicoAlvo', Thrift.Type.LIST, 16);
    output.writeListBegin(Thrift.Type.I64, this.publicoAlvo.length);
    for (var iter44 in this.publicoAlvo)
    {
      if (this.publicoAlvo.hasOwnProperty(iter44))
      {
        iter44 = this.publicoAlvo[iter44];
        output.writeI64(iter44);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.participantes !== null && this.participantes !== undefined) {
    output.writeFieldBegin('participantes', Thrift.Type.LIST, 18);
    output.writeListBegin(Thrift.Type.STRUCT, this.participantes.length);
    for (var iter45 in this.participantes)
    {
      if (this.participantes.hasOwnProperty(iter45))
      {
        iter45 = this.participantes[iter45];
        iter45.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.tbCdsOrigem !== null && this.tbCdsOrigem !== undefined) {
    output.writeFieldBegin('tbCdsOrigem', Thrift.Type.I32, 19);
    output.writeI32(this.tbCdsOrigem);
    output.writeFieldEnd();
  }
  if (this.cnesLocalAtividade !== null && this.cnesLocalAtividade !== undefined) {
    output.writeFieldBegin('cnesLocalAtividade', Thrift.Type.STRING, 21);
    output.writeString(this.cnesLocalAtividade);
    output.writeFieldEnd();
  }
  if (this.procedimento !== null && this.procedimento !== undefined) {
    output.writeFieldBegin('procedimento', Thrift.Type.STRING, 22);
    output.writeString(this.procedimento);
    output.writeFieldEnd();
  }
  if (this.turno !== null && this.turno !== undefined) {
    output.writeFieldBegin('turno', Thrift.Type.I64, 23);
    output.writeI64(this.turno);
    output.writeFieldEnd();
  }
  if (this.headerTransport !== null && this.headerTransport !== undefined) {
    output.writeFieldBegin('headerTransport', Thrift.Type.STRUCT, 24);
    this.headerTransport.write(output);
    output.writeFieldEnd();
  }
  if (this.temasParaSaude !== null && this.temasParaSaude !== undefined) {
    output.writeFieldBegin('temasParaSaude', Thrift.Type.LIST, 25);
    output.writeListBegin(Thrift.Type.I64, this.temasParaSaude.length);
    for (var iter46 in this.temasParaSaude)
    {
      if (this.temasParaSaude.hasOwnProperty(iter46))
      {
        iter46 = this.temasParaSaude[iter46];
        output.writeI64(iter46);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.praticasEmSaude !== null && this.praticasEmSaude !== undefined) {
    output.writeFieldBegin('praticasEmSaude', Thrift.Type.LIST, 26);
    output.writeListBegin(Thrift.Type.I64, this.praticasEmSaude.length);
    for (var iter47 in this.praticasEmSaude)
    {
      if (this.praticasEmSaude.hasOwnProperty(iter47))
      {
        iter47 = this.praticasEmSaude[iter47];
        output.writeI64(iter47);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.pseEducacao !== null && this.pseEducacao !== undefined) {
    output.writeFieldBegin('pseEducacao', Thrift.Type.BOOL, 27);
    output.writeBool(this.pseEducacao);
    output.writeFieldEnd();
  }
  if (this.pseSaude !== null && this.pseSaude !== undefined) {
    output.writeFieldBegin('pseSaude', Thrift.Type.BOOL, 28);
    output.writeBool(this.pseSaude);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

