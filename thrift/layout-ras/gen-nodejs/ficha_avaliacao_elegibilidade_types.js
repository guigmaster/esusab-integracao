//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var common_ttypes = require('./common_types')


var ttypes = module.exports = {};
FichaAvaliacaoElegibilidadeThrift = module.exports.FichaAvaliacaoElegibilidadeThrift = function(args) {
  this.uuidFicha = null;
  this.tpCdsOrigem = null;
  this.cnsCidadao = null;
  this.nomeCidadao = null;
  this.nomeSocialCidadao = null;
  this.dataNascimentoCidadao = null;
  this.sexoCidadao = null;
  this.racaCorCidadao = null;
  this.nomeMaeCidadao = null;
  this.desconheceNomeMae = null;
  this.codigoIbgeMunicipioNascimento = null;
  this.nacionalidadeCidadao = null;
  this.emailCidadao = null;
  this.numeroNisPisPasep = null;
  this.endereco = null;
  this.atencaoDomiciliarProcedencia = null;
  this.atencaoDomiciliarModalidade = null;
  this.condicoesAvaliadas = null;
  this.cid10Principal = null;
  this.cid10SecundarioUm = null;
  this.cid10SecundarioDois = null;
  this.conclusaoDestinoElegivel = null;
  this.conclusaoDestinoInelegivel = null;
  this.cuidadorCidadao = null;
  this.turno = null;
  this.headerTransport = null;
  this.nomePaiCidadao = null;
  this.desconheceNomePai = null;
  this.dtNaturalizacao = null;
  this.portariaNaturalizacao = null;
  this.dtEntradaBrasil = null;
  this.paisNascimento = null;
  this.etnia = null;
  this.cnsCuidador = null;
  this.cpfCidadao = null;
  this.cpfCuidador = null;
  if (args) {
    if (args.uuidFicha !== undefined) {
      this.uuidFicha = args.uuidFicha;
    }
    if (args.tpCdsOrigem !== undefined) {
      this.tpCdsOrigem = args.tpCdsOrigem;
    }
    if (args.cnsCidadao !== undefined) {
      this.cnsCidadao = args.cnsCidadao;
    }
    if (args.nomeCidadao !== undefined) {
      this.nomeCidadao = args.nomeCidadao;
    }
    if (args.nomeSocialCidadao !== undefined) {
      this.nomeSocialCidadao = args.nomeSocialCidadao;
    }
    if (args.dataNascimentoCidadao !== undefined) {
      this.dataNascimentoCidadao = args.dataNascimentoCidadao;
    }
    if (args.sexoCidadao !== undefined) {
      this.sexoCidadao = args.sexoCidadao;
    }
    if (args.racaCorCidadao !== undefined) {
      this.racaCorCidadao = args.racaCorCidadao;
    }
    if (args.nomeMaeCidadao !== undefined) {
      this.nomeMaeCidadao = args.nomeMaeCidadao;
    }
    if (args.desconheceNomeMae !== undefined) {
      this.desconheceNomeMae = args.desconheceNomeMae;
    }
    if (args.codigoIbgeMunicipioNascimento !== undefined) {
      this.codigoIbgeMunicipioNascimento = args.codigoIbgeMunicipioNascimento;
    }
    if (args.nacionalidadeCidadao !== undefined) {
      this.nacionalidadeCidadao = args.nacionalidadeCidadao;
    }
    if (args.emailCidadao !== undefined) {
      this.emailCidadao = args.emailCidadao;
    }
    if (args.numeroNisPisPasep !== undefined) {
      this.numeroNisPisPasep = args.numeroNisPisPasep;
    }
    if (args.endereco !== undefined) {
      this.endereco = args.endereco;
    }
    if (args.atencaoDomiciliarProcedencia !== undefined) {
      this.atencaoDomiciliarProcedencia = args.atencaoDomiciliarProcedencia;
    }
    if (args.atencaoDomiciliarModalidade !== undefined) {
      this.atencaoDomiciliarModalidade = args.atencaoDomiciliarModalidade;
    }
    if (args.condicoesAvaliadas !== undefined) {
      this.condicoesAvaliadas = args.condicoesAvaliadas;
    }
    if (args.cid10Principal !== undefined) {
      this.cid10Principal = args.cid10Principal;
    }
    if (args.cid10SecundarioUm !== undefined) {
      this.cid10SecundarioUm = args.cid10SecundarioUm;
    }
    if (args.cid10SecundarioDois !== undefined) {
      this.cid10SecundarioDois = args.cid10SecundarioDois;
    }
    if (args.conclusaoDestinoElegivel !== undefined) {
      this.conclusaoDestinoElegivel = args.conclusaoDestinoElegivel;
    }
    if (args.conclusaoDestinoInelegivel !== undefined) {
      this.conclusaoDestinoInelegivel = args.conclusaoDestinoInelegivel;
    }
    if (args.cuidadorCidadao !== undefined) {
      this.cuidadorCidadao = args.cuidadorCidadao;
    }
    if (args.turno !== undefined) {
      this.turno = args.turno;
    }
    if (args.headerTransport !== undefined) {
      this.headerTransport = args.headerTransport;
    }
    if (args.nomePaiCidadao !== undefined) {
      this.nomePaiCidadao = args.nomePaiCidadao;
    }
    if (args.desconheceNomePai !== undefined) {
      this.desconheceNomePai = args.desconheceNomePai;
    }
    if (args.dtNaturalizacao !== undefined) {
      this.dtNaturalizacao = args.dtNaturalizacao;
    }
    if (args.portariaNaturalizacao !== undefined) {
      this.portariaNaturalizacao = args.portariaNaturalizacao;
    }
    if (args.dtEntradaBrasil !== undefined) {
      this.dtEntradaBrasil = args.dtEntradaBrasil;
    }
    if (args.paisNascimento !== undefined) {
      this.paisNascimento = args.paisNascimento;
    }
    if (args.etnia !== undefined) {
      this.etnia = args.etnia;
    }
    if (args.cnsCuidador !== undefined) {
      this.cnsCuidador = args.cnsCuidador;
    }
    if (args.cpfCidadao !== undefined) {
      this.cpfCidadao = args.cpfCidadao;
    }
    if (args.cpfCuidador !== undefined) {
      this.cpfCuidador = args.cpfCuidador;
    }
  }
};
FichaAvaliacaoElegibilidadeThrift.prototype = {};
FichaAvaliacaoElegibilidadeThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uuidFicha = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.tpCdsOrigem = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.cnsCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.nomeCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.nomeSocialCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I64) {
        this.dataNascimentoCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.I64) {
        this.sexoCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I64) {
        this.racaCorCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.STRING) {
        this.nomeMaeCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.BOOL) {
        this.desconheceNomeMae = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.STRING) {
        this.codigoIbgeMunicipioNascimento = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 13:
      if (ftype == Thrift.Type.I64) {
        this.nacionalidadeCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 14:
      if (ftype == Thrift.Type.STRING) {
        this.emailCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 15:
      if (ftype == Thrift.Type.STRING) {
        this.numeroNisPisPasep = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 16:
      if (ftype == Thrift.Type.STRUCT) {
        this.endereco = new common_ttypes.EnderecoLocalPermanenciaThrift();
        this.endereco.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 17:
      if (ftype == Thrift.Type.I64) {
        this.atencaoDomiciliarProcedencia = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 18:
      if (ftype == Thrift.Type.I64) {
        this.atencaoDomiciliarModalidade = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 19:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.condicoesAvaliadas = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI64();
          this.condicoesAvaliadas.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 20:
      if (ftype == Thrift.Type.STRING) {
        this.cid10Principal = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 21:
      if (ftype == Thrift.Type.STRING) {
        this.cid10SecundarioUm = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 22:
      if (ftype == Thrift.Type.STRING) {
        this.cid10SecundarioDois = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 23:
      if (ftype == Thrift.Type.I64) {
        this.conclusaoDestinoElegivel = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 24:
      if (ftype == Thrift.Type.LIST) {
        var _size7 = 0;
        var _rtmp311;
        this.conclusaoDestinoInelegivel = [];
        var _etype10 = 0;
        _rtmp311 = input.readListBegin();
        _etype10 = _rtmp311.etype;
        _size7 = _rtmp311.size;
        for (var _i12 = 0; _i12 < _size7; ++_i12)
        {
          var elem13 = null;
          elem13 = input.readI64();
          this.conclusaoDestinoInelegivel.push(elem13);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 25:
      if (ftype == Thrift.Type.I64) {
        this.cuidadorCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 26:
      if (ftype == Thrift.Type.I64) {
        this.turno = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 27:
      if (ftype == Thrift.Type.STRUCT) {
        this.headerTransport = new common_ttypes.VariasLotacoesHeaderThrift();
        this.headerTransport.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 28:
      if (ftype == Thrift.Type.STRING) {
        this.nomePaiCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 29:
      if (ftype == Thrift.Type.BOOL) {
        this.desconheceNomePai = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 30:
      if (ftype == Thrift.Type.I64) {
        this.dtNaturalizacao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 31:
      if (ftype == Thrift.Type.STRING) {
        this.portariaNaturalizacao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 32:
      if (ftype == Thrift.Type.I64) {
        this.dtEntradaBrasil = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 33:
      if (ftype == Thrift.Type.I64) {
        this.paisNascimento = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 34:
      if (ftype == Thrift.Type.I64) {
        this.etnia = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 35:
      if (ftype == Thrift.Type.STRING) {
        this.cnsCuidador = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 36:
      if (ftype == Thrift.Type.STRING) {
        this.cpfCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 37:
      if (ftype == Thrift.Type.STRING) {
        this.cpfCuidador = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

FichaAvaliacaoElegibilidadeThrift.prototype.write = function(output) {
  output.writeStructBegin('FichaAvaliacaoElegibilidadeThrift');
  if (this.uuidFicha !== null && this.uuidFicha !== undefined) {
    output.writeFieldBegin('uuidFicha', Thrift.Type.STRING, 1);
    output.writeString(this.uuidFicha);
    output.writeFieldEnd();
  }
  if (this.tpCdsOrigem !== null && this.tpCdsOrigem !== undefined) {
    output.writeFieldBegin('tpCdsOrigem', Thrift.Type.I32, 2);
    output.writeI32(this.tpCdsOrigem);
    output.writeFieldEnd();
  }
  if (this.cnsCidadao !== null && this.cnsCidadao !== undefined) {
    output.writeFieldBegin('cnsCidadao', Thrift.Type.STRING, 4);
    output.writeString(this.cnsCidadao);
    output.writeFieldEnd();
  }
  if (this.nomeCidadao !== null && this.nomeCidadao !== undefined) {
    output.writeFieldBegin('nomeCidadao', Thrift.Type.STRING, 5);
    output.writeString(this.nomeCidadao);
    output.writeFieldEnd();
  }
  if (this.nomeSocialCidadao !== null && this.nomeSocialCidadao !== undefined) {
    output.writeFieldBegin('nomeSocialCidadao', Thrift.Type.STRING, 6);
    output.writeString(this.nomeSocialCidadao);
    output.writeFieldEnd();
  }
  if (this.dataNascimentoCidadao !== null && this.dataNascimentoCidadao !== undefined) {
    output.writeFieldBegin('dataNascimentoCidadao', Thrift.Type.I64, 7);
    output.writeI64(this.dataNascimentoCidadao);
    output.writeFieldEnd();
  }
  if (this.sexoCidadao !== null && this.sexoCidadao !== undefined) {
    output.writeFieldBegin('sexoCidadao', Thrift.Type.I64, 8);
    output.writeI64(this.sexoCidadao);
    output.writeFieldEnd();
  }
  if (this.racaCorCidadao !== null && this.racaCorCidadao !== undefined) {
    output.writeFieldBegin('racaCorCidadao', Thrift.Type.I64, 9);
    output.writeI64(this.racaCorCidadao);
    output.writeFieldEnd();
  }
  if (this.nomeMaeCidadao !== null && this.nomeMaeCidadao !== undefined) {
    output.writeFieldBegin('nomeMaeCidadao', Thrift.Type.STRING, 10);
    output.writeString(this.nomeMaeCidadao);
    output.writeFieldEnd();
  }
  if (this.desconheceNomeMae !== null && this.desconheceNomeMae !== undefined) {
    output.writeFieldBegin('desconheceNomeMae', Thrift.Type.BOOL, 11);
    output.writeBool(this.desconheceNomeMae);
    output.writeFieldEnd();
  }
  if (this.codigoIbgeMunicipioNascimento !== null && this.codigoIbgeMunicipioNascimento !== undefined) {
    output.writeFieldBegin('codigoIbgeMunicipioNascimento', Thrift.Type.STRING, 12);
    output.writeString(this.codigoIbgeMunicipioNascimento);
    output.writeFieldEnd();
  }
  if (this.nacionalidadeCidadao !== null && this.nacionalidadeCidadao !== undefined) {
    output.writeFieldBegin('nacionalidadeCidadao', Thrift.Type.I64, 13);
    output.writeI64(this.nacionalidadeCidadao);
    output.writeFieldEnd();
  }
  if (this.emailCidadao !== null && this.emailCidadao !== undefined) {
    output.writeFieldBegin('emailCidadao', Thrift.Type.STRING, 14);
    output.writeString(this.emailCidadao);
    output.writeFieldEnd();
  }
  if (this.numeroNisPisPasep !== null && this.numeroNisPisPasep !== undefined) {
    output.writeFieldBegin('numeroNisPisPasep', Thrift.Type.STRING, 15);
    output.writeString(this.numeroNisPisPasep);
    output.writeFieldEnd();
  }
  if (this.endereco !== null && this.endereco !== undefined) {
    output.writeFieldBegin('endereco', Thrift.Type.STRUCT, 16);
    this.endereco.write(output);
    output.writeFieldEnd();
  }
  if (this.atencaoDomiciliarProcedencia !== null && this.atencaoDomiciliarProcedencia !== undefined) {
    output.writeFieldBegin('atencaoDomiciliarProcedencia', Thrift.Type.I64, 17);
    output.writeI64(this.atencaoDomiciliarProcedencia);
    output.writeFieldEnd();
  }
  if (this.atencaoDomiciliarModalidade !== null && this.atencaoDomiciliarModalidade !== undefined) {
    output.writeFieldBegin('atencaoDomiciliarModalidade', Thrift.Type.I64, 18);
    output.writeI64(this.atencaoDomiciliarModalidade);
    output.writeFieldEnd();
  }
  if (this.condicoesAvaliadas !== null && this.condicoesAvaliadas !== undefined) {
    output.writeFieldBegin('condicoesAvaliadas', Thrift.Type.LIST, 19);
    output.writeListBegin(Thrift.Type.I64, this.condicoesAvaliadas.length);
    for (var iter14 in this.condicoesAvaliadas)
    {
      if (this.condicoesAvaliadas.hasOwnProperty(iter14))
      {
        iter14 = this.condicoesAvaliadas[iter14];
        output.writeI64(iter14);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.cid10Principal !== null && this.cid10Principal !== undefined) {
    output.writeFieldBegin('cid10Principal', Thrift.Type.STRING, 20);
    output.writeString(this.cid10Principal);
    output.writeFieldEnd();
  }
  if (this.cid10SecundarioUm !== null && this.cid10SecundarioUm !== undefined) {
    output.writeFieldBegin('cid10SecundarioUm', Thrift.Type.STRING, 21);
    output.writeString(this.cid10SecundarioUm);
    output.writeFieldEnd();
  }
  if (this.cid10SecundarioDois !== null && this.cid10SecundarioDois !== undefined) {
    output.writeFieldBegin('cid10SecundarioDois', Thrift.Type.STRING, 22);
    output.writeString(this.cid10SecundarioDois);
    output.writeFieldEnd();
  }
  if (this.conclusaoDestinoElegivel !== null && this.conclusaoDestinoElegivel !== undefined) {
    output.writeFieldBegin('conclusaoDestinoElegivel', Thrift.Type.I64, 23);
    output.writeI64(this.conclusaoDestinoElegivel);
    output.writeFieldEnd();
  }
  if (this.conclusaoDestinoInelegivel !== null && this.conclusaoDestinoInelegivel !== undefined) {
    output.writeFieldBegin('conclusaoDestinoInelegivel', Thrift.Type.LIST, 24);
    output.writeListBegin(Thrift.Type.I64, this.conclusaoDestinoInelegivel.length);
    for (var iter15 in this.conclusaoDestinoInelegivel)
    {
      if (this.conclusaoDestinoInelegivel.hasOwnProperty(iter15))
      {
        iter15 = this.conclusaoDestinoInelegivel[iter15];
        output.writeI64(iter15);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.cuidadorCidadao !== null && this.cuidadorCidadao !== undefined) {
    output.writeFieldBegin('cuidadorCidadao', Thrift.Type.I64, 25);
    output.writeI64(this.cuidadorCidadao);
    output.writeFieldEnd();
  }
  if (this.turno !== null && this.turno !== undefined) {
    output.writeFieldBegin('turno', Thrift.Type.I64, 26);
    output.writeI64(this.turno);
    output.writeFieldEnd();
  }
  if (this.headerTransport !== null && this.headerTransport !== undefined) {
    output.writeFieldBegin('headerTransport', Thrift.Type.STRUCT, 27);
    this.headerTransport.write(output);
    output.writeFieldEnd();
  }
  if (this.nomePaiCidadao !== null && this.nomePaiCidadao !== undefined) {
    output.writeFieldBegin('nomePaiCidadao', Thrift.Type.STRING, 28);
    output.writeString(this.nomePaiCidadao);
    output.writeFieldEnd();
  }
  if (this.desconheceNomePai !== null && this.desconheceNomePai !== undefined) {
    output.writeFieldBegin('desconheceNomePai', Thrift.Type.BOOL, 29);
    output.writeBool(this.desconheceNomePai);
    output.writeFieldEnd();
  }
  if (this.dtNaturalizacao !== null && this.dtNaturalizacao !== undefined) {
    output.writeFieldBegin('dtNaturalizacao', Thrift.Type.I64, 30);
    output.writeI64(this.dtNaturalizacao);
    output.writeFieldEnd();
  }
  if (this.portariaNaturalizacao !== null && this.portariaNaturalizacao !== undefined) {
    output.writeFieldBegin('portariaNaturalizacao', Thrift.Type.STRING, 31);
    output.writeString(this.portariaNaturalizacao);
    output.writeFieldEnd();
  }
  if (this.dtEntradaBrasil !== null && this.dtEntradaBrasil !== undefined) {
    output.writeFieldBegin('dtEntradaBrasil', Thrift.Type.I64, 32);
    output.writeI64(this.dtEntradaBrasil);
    output.writeFieldEnd();
  }
  if (this.paisNascimento !== null && this.paisNascimento !== undefined) {
    output.writeFieldBegin('paisNascimento', Thrift.Type.I64, 33);
    output.writeI64(this.paisNascimento);
    output.writeFieldEnd();
  }
  if (this.etnia !== null && this.etnia !== undefined) {
    output.writeFieldBegin('etnia', Thrift.Type.I64, 34);
    output.writeI64(this.etnia);
    output.writeFieldEnd();
  }
  if (this.cnsCuidador !== null && this.cnsCuidador !== undefined) {
    output.writeFieldBegin('cnsCuidador', Thrift.Type.STRING, 35);
    output.writeString(this.cnsCuidador);
    output.writeFieldEnd();
  }
  if (this.cpfCidadao !== null && this.cpfCidadao !== undefined) {
    output.writeFieldBegin('cpfCidadao', Thrift.Type.STRING, 36);
    output.writeString(this.cpfCidadao);
    output.writeFieldEnd();
  }
  if (this.cpfCuidador !== null && this.cpfCuidador !== undefined) {
    output.writeFieldBegin('cpfCuidador', Thrift.Type.STRING, 37);
    output.writeString(this.cpfCuidador);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

